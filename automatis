from web3 import Web3

# Подключение к локальной ноде Ethereum или удаленной ноде через Infura
web3 = Web3(Web3.HTTPProvider('https://mainnet.infura.io/v3/YOUR_INFURA_PROJECT_ID'))

# Загрузка адреса вашего кошелька и приватного ключа
address = Web3.toChecksumAddress('YOUR_WALLET_ADDRESS')
private_key = 'YOUR_PRIVATE_KEY'

# Загрузка ABI и адреса контракта Uniswap
uniswap_contract_address = Web3.toChecksumAddress('0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D')
uniswap_abi = [
    # Здесь должно быть ABI контракта Uniswap
]

# Загрузка контракта Uniswap
uniswap_contract = web3.eth.contract(address=uniswap_contract_address, abi=uniswap_abi)

# Определение параметров транзакции
token_to_sell_address = Web3.toChecksumAddress('TOKEN_TO_SELL_ADDRESS')
token_to_buy_address = Web3.toChecksumAddress('TOKEN_TO_BUY_ADDRESS')
amount_to_sell = web3.toWei(1, 'ether')  # Пример: продажа 1 ETH
min_amount_to_buy = web3.toWei(0.9, 'ether')  # Пример: минимальное количество токена, которое вы хотите купить

# Создание транзакции для функции swapExactETHForTokens
transaction = uniswap_contract.functions.swapExactETHForTokens(
    min_amount_to_buy,
    [token_to_sell_address, token_to_buy_address],
    address,
    int(web3.eth.getBlock('latest').gasLimit / 2),
    int(web3.eth.gasPrice * 1.1)
).buildTransaction({
    'from': address,
    'value': amount_to_sell,
    'gas': 300000,
    'gasPrice': web3.toWei('50', 'gwei'),
    'nonce': web3.eth.getTransactionCount(address)
})

# Подписание транзакции с использованием приватного ключа
signed_transaction = web3.eth.account.sign_transaction(transaction, private_key=private_key)

# Отправка транзакции
transaction_hash = web3.eth.send_raw_transaction(signed_transaction.rawTransaction)

# Ожидание подтверждения транзак
